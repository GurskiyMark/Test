// const location_1 = 3
// const location_2 = 4
// const location_3 = 5

// const guess = 4
// if (guess === location_1 || guess === location_2 || guess === location_3){
//     alert("HIT!")
// } else {
//     alert("MISS!")
// }


// if (guess === location_1) {
//     alert("HIT")
// } else if (guess === location_2) {
//     alert("HIT")
// } else if (guess === location_3) {
//     alert("HIT")
// } else {
//     alert("MISS!")
// }





// const inStock = true
// const onSale = true

// if(inStock === true){
//     if (onSale === true) {
//         alert("Buy!!!")
//     }
// }

// if(inStock && onSale) {
//     alert("BUY!!!")
// }

// const inStock = true
// const onSale = true
// const price = 100

// if(inStock === true && (onSale === true || price < 80)) {
//     alert("BUY!!!")
// }
// if(inStock && (onSale || price < 80)) {
//     alert("BUY!!!")
// }

// const temp = 83
// const willRain = true
// const humid = (willRain && temp > 80)

// console.log(humid);

// const butIt = (onSale && inStock) //true







// üü¢ ‚úÖ ‚ùå üíÄ üò° üéâ üòé üß† üîç üí™ üê£ ‚¨áÔ∏è ‚öñÔ∏è

// const randomLoc = Math.floor(Math.random () * 5)
// const location1 = randomLoc
// const location2 = location1 + 1
// const location3 = location2 + +1

// let destroy = false // –∫–æ—Ä–∞–±–ª—å –∑–∞—Ç–æ–ø–ª–µ–Ω
// let hits = 0 //–ø–æ–ø–∞–¥–∞–Ω–∏–µ
// let guess = 0 // –ø–æ–ø—ã—Ç–∫–∞
// let  guesses = 0;

// while (!destroy){
//     guess = +prompt("–≤–≤–µ–¥–∏ 0-6")
//     if (guess < 0 || guess > 6) {
//         alert("–¢—ã –≤–≤–µ–ª –Ω–µ —Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ 0-6")

//     } else {
//         guesses += 1;

//     if (guess === location1 || guess === location2 || guess === location3){
//         alert("HIT")
//         hits += 1;
//         if (hits === 3) {
//             alert("–ö–æ—Ä–∞–±–ª—å –£–ù–ò–ß–¢–û–ñ–ï–ù")
//             destroy = true;
//         }
//     }        else {
//         alert("MISS")
//        }
//     }
// }

// const stats = ("–£ —Ç–µ–±—è " + hits + " –ø–æ–ø–∞–¥–∞–Ω–∏–π –∏ " + guesses + " –ø–æ–ø—ã—Ç–æ–∫")
// alert(stats)




// /*–ö–ê–ú–ï–ù–¨ –ù–û–ñ–ù–ò–¶–´ –ë–£–ú–ê–ì–ê
// –°–∞–Ω–∞—á–∞–ª–∞ –≤—ã–±–∏—Ä–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å,
//  –ø–æ—Ç–æ–º –∏–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –æ–Ω –≤–≤–µ–ª,
// –∑–∞—Ç–µ–º –≤—ã–±–æ—Ä –∫–æ–º—å—é—Ç–µ—Ä–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á—Ç–æ –≤—ã–±—Ä–∞–ª –∫–æ–º—å—é—Ç–µ—Ä,
//  –¥–∞–ª–µ–µ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∏—á—å—é,–ø–æ–±–µ–¥—É,–ø–æ—Ä–∞–∂–µ–Ω–∏–µ –∏ –≤—ã–≤–æ–¥ –∫—Ç–æ –ø–æ–±–µ–¥–∏–ª*/

// let userChoice          // –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// let computerChoice      // –≤—ã–±–æ—Ä –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
// let isWinner = false;   // –ø–æ–±–µ–¥–∏–ª—è –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω–µ—Ç, (–¥–ª—è —Ü–∏–∫–ª–∞)

// while (!isWinner) {           //–¥–æ —Ç–µ—Ö –ø–æ—Ä –ø–æ–∫–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –Ω–µ—Ç —Ç.–µ. –≥—Ä—É–±–æ –≥–æ–≤–æ—Ä—è isWinner === false
//     userChoice = prompt("–í—ã–±–µ—Ä–∏—Ç–µ: \n–∫–∞–º–µ–Ω—å \n–Ω–æ–∂–Ω–∏—Ü—ã \n–±—É–º–∞–≥–∞ ")   // —Å—Ç—Ä–æ–∫–∞ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
//     userChoice = userChoice.toLowerCase()    //–¥–µ–ª–∞–µ—Ç –≤–≤–æ–¥ –Ω–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É

//     if (userChoice !== "–∫–∞–º–µ–Ω—å" && userChoice !== "–Ω–æ–∂–Ω–∏—Ü—ã" && userChoice !== "–±—É–º–∞–≥–∞") {   //–ø—Ä–æ–≤–µ—Ä—è—é –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞
//         alert("‚ùå–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ‚ùå")
//         continue; // –µ—Å–ª–∏ —Å—Ä–∞–±–æ—Ç–∞–ª contunie —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è –∏ –Ω–µ –±—É–¥–µ—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å—Å—è
//     }

//     let randomNum = Math.floor(Math.random() * 3) // –≤—ã–¥–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0-2 
//     switch (randomNum) {
//         case 0:
//             computerChoice = "–∫–∞–º–µ–Ω—å"
//             break
//         case 1:
//             computerChoice = "–Ω–æ–∂–Ω–∏—Ü—ã"
//             break
//         case 2:
//             computerChoice = "–±—É–º–∞–≥–∞"
//             break
//         // default —Ç—É—Ç –Ω–µ –Ω—É–∂–µ–Ω —Ç.–∫. –≤ If —Å–≤–µ—Ä—Ö—É —è —É–∂–µ –∏—Å–∫–ª—é—á–∏–ª –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞
//     }
//         alert("–ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–±—Ä–∞–ª: " + computerChoice)

//         // –º—ã –¥–µ–ª–∞–µ–º if else —Ç.–∫. –Ω–∞–º –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ 1 –∏–∑ –∏—Å–æ–¥–æ–≤ –Ω–∏—á—å—è –∏–ª–∏ –ø–æ–±–µ–¥–∞ –∏–ª–∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ
//         if (userChoice === computerChoice) {
//             alert("‚öñÔ∏è–ù–∏—á—å—è‚öñÔ∏è")
//         } else if (
//             (userChoice === "–∫–∞–º–µ–Ω—å" && computerChoice === "–Ω–æ–∂–Ω–∏—Ü—ã")||
//             (userChoice === "–Ω–æ–∂–Ω–∏—Ü—ã" && computerChoice === "–±—É–º–∞–≥–∞")||
//             (userChoice === "–±—É–º–∞–≥–∞" && computerChoice === "–∫–∞–º–µ–Ω—å")
//         ) {
//             alert("üü¢—Ç—ã –ø–æ–±–µ–¥–∏–ªüü¢")
//             isWinner = true;
//         } else {
//             alert("üò°—Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ªüò°")
//             isWinner = true;
//         }

// }





// /*–ó–∞–¥–∞—á–∞ 1. –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5
// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5.

// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥–∞–ª ‚Äî –≤—ã–≤–µ—Å—Ç–∏ ¬´–£–≥–∞–¥–∞–ª!¬ª

// –ï—Å–ª–∏ —á–∏—Å–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ–ª—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ ‚Äî –≤—ã–≤–µ—Å—Ç–∏ ¬´–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ¬ª

// –ï—Å–ª–∏ –º–µ–Ω—å—à–µ ‚Äî –≤—ã–≤–µ—Å—Ç–∏ ¬´–°–ª–∏—à–∫–æ–º –º–∞–ª–æ¬ª

// –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ ‚Äî –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –≤–≤–µ—Å—Ç–∏ —Å–Ω–æ–≤–∞ */

// let userNum
// let computerNum
// let numWinner = false;

// while (!numWinner) {
//     userNum = +prompt("–í–≤–µ–¥–∏ —á–∏—Å–ª–æ: –æ—Ç 1 –¥–æ 5")

//     if (userNum < 1) {
//         alert("–°–ª–∏—à–∫–æ–º –º–∞–ª–æ")
//         continue;
//     } else if (userNum > 5) {
//         alert("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ")
//         continue;
//     }



//     computerNum = Math.floor(Math.random() * 5) + 1 // –ø–æ—Å–∫–æ–ª—å–∫—É —á–∏—Å–ª–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –æ—Ç 0, –∞ —É–º–Ω–æ–∂–∞–µ–º –º—ã –Ω–∞ 5 —Ç.–∫. –∏–∑–Ω–∞—á–∞–Ω—å–Ω–æ 0-4 +1 –±—É–¥–µ—Ç 1-5

//     alert(`–í—ã –≤—ã–±—Ä–∞–ª–∏ —á–∏—Å–ª–æ: ${userNum} \n–ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–±—Ä–∞–ª: ${computerNum}`)

//     if (userNum === computerNum) {
//         alert("üü¢—É–≥–∞–¥–∞–ªüü¢")
//         numWinner = true;
//     } else {
//         alert("–ù–µ —É–≥–∞–¥–∞–ª")
//         numWinner = true;
//     }

// }



// function bark (name, weight) {
//     if (weight > 20){
//         console.log(`${name} says WOOF WOOF`);
//     } else {
//         console.log(`${name} says woof woof`);      
//     }
// }

// bark ("rover", 53)
// bark ("spot", 13)


// function maketea (cups, tea){
//     console.log(`Brewing ${cups} cups of ${tea}`);
// }

// maketea(3, "Earl Grey")




// const depositAmount = 1000
// const yearlyRate = 15
// const depositTermInYears = 2

// function getDepositIncome(amount, rate, term) {
//     let depositIncome = 0
//     let count = 0

//     while (count < term) {
//         depositIncome = depositIncome + amount * (rate / 100)
//         count += 1;
//     }
//     return depositIncome;
// }

// const income_1 = getDepositIncome(depositAmount, yearlyRate, depositTermInYears)
// const income_2 = getDepositIncome(1000, 30, 3)






// –û–±—ä—è–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–æ–ª–æ—Ç–∞
let gold = 100

function createBuilding(buildingName, costGold) {

    const hasEnoughGold = gold >= costGold

    if (hasEnoughGold) {
        gold -= costGold
        console.log(`${buildingName}: work complete!`)
    } else {
        console.log(`${buildingName}: not enough resources!`)
    }
}

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
createBuilding('Tower', 30) // –°—Ç—Ä–æ–∏–º –±–∞—à–Ω—é, –∑–æ–ª–æ—Ç–∞ —Ö–≤–∞—Ç–∞–µ—Ç
createBuilding('Blacksmith', 140) // –°—Ç—Ä–æ–∏—Ç—å –∫—É–∑–Ω–∏—Ü—É, –∑–æ–ª–æ—Ç–∞ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
function increaseResource(currentAmount, increment) {
    return currentAmount + increment
}

// –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∑–æ–ª–æ—Ç–∞
gold = increaseResource(gold, 50)
console.log(`New amount of gold: ${gold}`)





